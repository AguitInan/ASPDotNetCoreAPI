// <auto-generated />
using System;
using Exercice05.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exercice05.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Exercice05.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("PizzaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("ingredient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tomate d'Espagne",
                            Name = "Tomate"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Poulet grillé",
                            Name = "Poulet"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Viande de boeuf",
                            Name = "Viande"
                        });
                });

            modelBuilder.Entity("Exercice05.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<int>("Variety")
                        .HasColumnType("int")
                        .HasColumnName("pizza_type");

                    b.HasKey("Id");

                    b.ToTable("pizza");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Classic pizza with tomato sauce, mozzarella, and fresh basil.",
                            ImageUrl = "https://example.com/images/margherita.jpg",
                            Name = "Margherita",
                            Price = 8.99m,
                            Variety = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Spicy pepperoni with mozzarella cheese and tomato sauce.",
                            ImageUrl = "https://example.com/images/pepperoni.jpg",
                            Name = "Pepperoni",
                            Price = 10.99m,
                            Variety = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "A delightful mix of seasonal vegetables, mozzarella, and tomato sauce.",
                            ImageUrl = "https://example.com/images/vegetarian.jpg",
                            Name = "Vegetarian",
                            Price = 9.99m,
                            Variety = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Ham and pineapple with mozzarella cheese and tomato sauce.",
                            ImageUrl = "https://example.com/images/hawaiian.jpg",
                            Name = "Hawaiian",
                            Price = 11.99m,
                            Variety = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Hot jalapenos, spicy pepperoni, mozzarella, and tomato sauce.",
                            ImageUrl = "https://example.com/images/spicy.jpg",
                            Name = "Spicy",
                            Price = 12.99m,
                            Variety = 1
                        });
                });

            modelBuilder.Entity("Exercice05.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("firstname");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit")
                        .HasColumnName("is_admin");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lastname");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "root@utopios.com",
                            FirstName = "Root",
                            IsAdmin = true,
                            LastName = "ROOT",
                            Password = "UEFzczAwKytEZXMgcGFpbGxldHRlcyBkYW5zIG1lcyB5ZXV4IEtldmlu"
                        });
                });

            modelBuilder.Entity("Exercice05.Models.Ingredient", b =>
                {
                    b.HasOne("Exercice05.Models.Pizza", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("PizzaId");
                });

            modelBuilder.Entity("Exercice05.Models.Pizza", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
